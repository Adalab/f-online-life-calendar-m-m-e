{"version":3,"sources":["components/editor/Editor.js","components/day/Day.js","components/dayList/DayList.js","components/calendar/Calendar.js","components/app/App.js","services/Helpers.js","index.js"],"names":["Editor","_this$props","this","props","updateMood","addMood","mood","clearMood","error","react_default","a","createElement","className","action","htmlFor","type","id","name","onChange","value","date","checked","rows","cols","placeholder","message","react_router_dom","to","onClick","Component","Day","day","title","DayList","days","map","item","index","Day_Day","key","Calendar","DayList_DayList","length","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newMood","isError","bind","assertThisInitialized","newData","JSON","parse","localStorage","getItem","setState","event","current","currentTarget","prevState","objectSpread","defineProperty","keys","data","dayToAdd","currentDays","toConsumableArray","push","setItem","stringify","_this$state","react_router","exact","path","render","Calendar_Calendar","editor_Editor","React","ReactDOM","components_app_App","document","getElementById"],"mappings":"2YA4GeA,mLAvGL,IAAAC,EACgDC,KAAKC,MAApDC,EADDH,EACCG,WAAYC,EADbJ,EACaI,QAASC,EADtBL,EACsBK,KAAMC,EAD5BN,EAC4BM,UAAWC,EADvCP,EACuCO,MAC7C,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,QAAME,OAAO,GAAGD,UAAU,gBACxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAOF,UAAU,2BAAhC,QAGAH,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACLC,GAAG,OACHC,KAAK,OACLL,UAAU,oBACVM,SAAUd,EACVe,MAAOb,EAAKc,KAAOd,EAAKc,KAAO,gBAGnCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,QACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,SACEI,KAAK,QACLC,GAAG,OACHC,KAAK,OACLE,MAAM,OACNP,UAAU,oBACVM,SAAUd,EACViB,WAASf,EAAKA,MAAsB,SAAdA,EAAKA,QAE7BG,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAOF,UAAU,2BAAhC,OAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,SACEI,KAAK,QACLC,GAAG,MACHC,KAAK,OACLE,MAAM,MACNP,UAAU,oBACVM,SAAUd,EACViB,WAASf,EAAKA,MAAsB,QAAdA,EAAKA,QAE7BG,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,MAAMF,UAAU,2BAA/B,SAMLN,GACe,SAAdA,EAAKA,MACHG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,UAAUF,UAAU,eAAnC,WACAH,EAAAC,EAAAC,cAAA,YACEK,GAAG,UACHC,KAAK,UACLK,KAAK,IACLC,KAAK,KACLC,YAAY,yBACZN,SAAUd,EACVQ,UAAU,uBACVO,MAAOb,EAAKmB,WAIpBhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZN,EAAKc,MACJd,EAAKA,KAEHG,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMd,UAAU,eAAee,GAAG,KAChClB,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,sBACVgB,QAASvB,GAHX,SAQFI,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,sBACVgB,QAASvB,GAHX,QAOJI,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMd,UAAU,eAAee,GAAG,KAChClB,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,wBACVgB,QAASrB,GAHX,YAQLC,GAASC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,mDAjGGiB,aCDfC,SAAM,SAAC3B,GAAU,IACd4B,EAAO5B,EAAP4B,IACP,OACEtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAAA,OACAqB,MAAOD,EAAIX,KACXR,UACe,SAAbmB,EAAIzB,KAEF,sBAEA,sBAEU,SAAbyB,EAAIzB,KAED,KAEA,SChBJ2B,SAAU,SAAC9B,GAAU,IAClB+B,EAAQ/B,EAAR+B,KACP,OACEzB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXsB,GAAQA,EAAKC,IACZ,SAACC,EAAMC,GAAP,OACA5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAKP,IAAKK,EAAMG,IAAKF,SCLvBG,SAAW,SAACrC,GAAU,IACnB+B,EAAQ/B,EAAR+B,KACP,OACEzB,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,WAAT,MAEFlB,EAAAC,EAAAC,cAAC8B,EAAD,CAASP,KAAMA,IACE,IAAhBA,EAAKQ,QACJjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,iDC4EO+B,cAlFb,SAAAA,EAAYxC,GAAM,IAAAyC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA3C,KAAAyC,IAChBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA3C,KAAA2C,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA/C,KAAMC,KACD+C,MAAQ,CACXC,QAAS,GACTjB,KAAM,GACNkB,SAAS,GAEXR,EAAKxC,WAAawC,EAAKxC,WAAWiD,KAAhBR,OAAAS,EAAA,EAAAT,CAAAD,IAClBA,EAAKvC,QAAUuC,EAAKvC,QAAQgD,KAAbR,OAAAS,EAAA,EAAAT,CAAAD,IACfA,EAAKrC,UAAYqC,EAAKrC,UAAU8C,KAAfR,OAAAS,EAAA,EAAAT,CAAAD,IATDA,mFAahB,IAAMW,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GACpEzD,KAAK0D,SAAS,CAAC1B,KAAMqB,wCAIrBrD,KAAK0D,SAAS,CAACT,QAAS,wCAGfU,GACT,IAAMC,EAAUD,EAAME,cACtB7D,KAAK0D,SAAS,SAAAI,GAEZ,MAAO,CAACb,QADEN,OAAAoB,EAAA,EAAApB,CAAA,GAAOmB,EAAUb,QAAjBN,OAAAqB,EAAA,EAAArB,CAAA,GAA2BiB,EAAQ7C,KAAO6C,EAAQ3C,2CAKxD0C,GACN,IAAMvD,EAAOJ,KAAKgD,MAAMC,QAClBN,OAAOsB,KAAK7D,GAAMoC,QAAU,GAChCxC,KAAK0D,SAAS,SAAAI,GACZ,ICzCU/C,EAAMmD,EDyCVC,EAAQxB,OAAAoB,EAAA,EAAApB,CAAA,GAAOmB,EAAUb,SACzBmB,EAAWzB,OAAA0B,EAAA,EAAA1B,CAAOmB,EAAU9B,MAGlC,OAFAoC,EAAYE,KAAKH,GC3CPpD,ED4CD,eC5COmD,ED4CSE,EC3C/BZ,aAAae,QAAQxD,EAAMuC,KAAKkB,UAAUN,ID4C7B,CAAClC,KAAMoC,EAAalB,SAAS,KAEtClD,KAAKK,aAELL,KAAK0D,SAAS,CAACR,SAAS,qCAIpB,IAAAuB,EAC2BzE,KAAKgD,MAA/BC,EADDwB,EACCxB,QAASjB,EADVyC,EACUzC,KAAMkB,EADhBuB,EACgBvB,QACfhD,EAAkCF,KAAlCE,WAAYC,EAAsBH,KAAtBG,QAASE,EAAaL,KAAbK,UAC5B,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,iCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,uBAGJH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAC7BtE,EAAAC,EAAAC,cAACqE,EAAD,CAAU9C,KAAMA,OAElBzB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOE,KAAK,UAAUC,OAAS,kBAC7BtE,EAAAC,EAAAC,cAACsE,EAAD,CACA7E,WAAYA,EACZC,QAASA,EACTC,KAAM6C,EACN5C,UAAWA,EACXC,MAAO4C,UAMf3C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,iCA5EQsE,IAAMrD,WEDxBsD,IAASJ,OACPtE,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACyE,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.f14dc794.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './editor.scss';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Editor extends Component {\r\n  render(){\r\n    const {updateMood, addMood, mood, clearMood, error} = this.props;\r\n    return(\r\n      <section className=\"editor\">\r\n        <form action=\"\" className=\"editor__form\">\r\n          <div className=\"form__container\">\r\n            <label htmlFor=\"date\" className=\"form__label date__label\">\r\n              Date\r\n            </label>\r\n            <input \r\n              type=\"date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              className=\"input date__input\"\r\n              onChange={updateMood}\r\n              value={mood.date ? mood.date : 'dd/mm/yyyy'}\r\n            />\r\n          </div>\r\n          <div className=\"form__container\">\r\n            <p className=\"mood__subtitle\">Mood</p>\r\n            <ul className=\"mood__options\">\r\n              <li className=\"mood__option\">\r\n                <input \r\n                  type=\"radio\"\r\n                  id=\"good\"\r\n                  name=\"mood\"\r\n                  value=\"good\"\r\n                  className=\"input mood__input\"\r\n                  onChange={updateMood}\r\n                  checked={mood.mood && mood.mood === 'good' ? true : false}\r\n                />\r\n                <label htmlFor=\"good\" className=\"form__label mood__label\">\r\n                  :)\r\n                </label>\r\n              </li>\r\n              <li className=\"mood__option\">\r\n                <input \r\n                  type=\"radio\"\r\n                  id=\"bad\"\r\n                  name=\"mood\"\r\n                  value=\"bad\"\r\n                  className=\"input mood__input\"\r\n                  onChange={updateMood}\r\n                  checked={mood.mood && mood.mood === 'bad' ? true : false}\r\n                />\r\n                <label htmlFor=\"bad\" className=\"form__label mood__label\">\r\n                  :(\r\n                </label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {mood && \r\n            mood.mood === 'good' &&\r\n              <div className=\"form__container\">\r\n                <label htmlFor=\"message\" className=\"form__label\">Message</label>\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  rows=\"2\"\r\n                  cols=\"33\"\r\n                  placeholder=\"Why was it a good day?\"\r\n                  onChange={updateMood}\r\n                  className=\"input message__input\"\r\n                  value={mood.message}\r\n                />\r\n              </div>\r\n          }\r\n          <div className=\"actions\">\r\n            {mood.date &&\r\n              mood.mood\r\n              ?\r\n                <Link className=\"button__link\" to=\"/\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"button button__save\"\r\n                    onClick={addMood}>\r\n                      Save\r\n                  </button>\r\n                </Link>\r\n              :\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"button button__save\"\r\n                  onClick={addMood}>\r\n                    Save\r\n                </button>\r\n            }\r\n            <Link className=\"button__link\" to=\"/\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"button button__cancel\"\r\n                onClick={clearMood}>\r\n                  Cancel\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        {error && <p className=\"error\">Please fill in the date and your mood!</p>}\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Editor;","import React from 'react';\r\nimport './day.scss';\r\n\r\nconst Day = (props) => {\r\n  const {day} = props;\r\n  return (\r\n    <li className=\"day\">\r\n      <div\r\n      title={day.date}\r\n      className={\r\n        day.mood === 'good'\r\n        ?\r\n          \"smiley smiley__good\"\r\n        :\r\n          \"smiley smiley__bad\"\r\n      }>\r\n      {day.mood === 'good'\r\n        ?\r\n          ':)'\r\n        :\r\n          ':('\r\n      }\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport {Day};","import React from 'react';\r\nimport {Day} from '../day/Day';\r\nimport './dayList.scss';\r\n\r\nconst DayList = (props) => {\r\n  const {days} = props;\r\n  return (\r\n    <ul className=\"day__list\">\r\n      {days && days.map(\r\n        (item, index) =>\r\n        <Day day={item} key={index} />\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport {DayList};","import React from 'react';\r\nimport {DayList} from '../dayList/DayList';\r\nimport './calendar.scss';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Calendar = (props) => {\r\n  const {days} = props;\r\n  return (\r\n    <section className=\"calendar\">\r\n      <div className=\"add__button\">\r\n        <Link to=\"/editor\">+</Link>\r\n      </div>\r\n      <DayList days={days} />\r\n      {days.length === 0 && \r\n        <p className=\"error\">Click the + above to add more days!</p>\r\n      }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport {Calendar};","import React from 'react';\nimport './App.scss';\nimport Editor from '../editor/Editor';\nimport {Calendar} from '../calendar/Calendar';\nimport {saveData} from '../../services/Helpers';\nimport {Route,Switch} from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      newMood: {},\n      days: [],\n      isError: false\n    }\n    this.updateMood = this.updateMood.bind(this);\n    this.addMood = this.addMood.bind(this);\n    this.clearMood = this.clearMood.bind(this);\n  }\n\n  componentDidMount(){\n    const newData = JSON.parse(localStorage.getItem('previousDays')) || [];\n    this.setState({days: newData});\n  }\n\n  clearMood(){\n    this.setState({newMood: {}});\n  }\n\n  updateMood(event){\n    const current = event.currentTarget;\n    this.setState(prevState => {\n      const mood = {...prevState.newMood, [current.name]: current.value};\n      return {newMood: mood};\n    })\n  }\n  \n  addMood(event){\n    const mood = this.state.newMood;\n      if (Object.keys(mood).length >= 2){\n      this.setState(prevState => {\n        const dayToAdd = {...prevState.newMood};\n        const currentDays = [...prevState.days];\n        currentDays.push(dayToAdd);\n        saveData('previousDays', currentDays);\n        return {days: currentDays, isError: false};\n      })\n      this.clearMood();\n    } else {\n      this.setState({isError: true});\n    }\n  }\n\n  render(){\n    const {newMood, days, isError} = this.state;\n    const {updateMood, addMood, clearMood} = this;\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <div className=\"wrapper header__wrapper\">\n            <h1 className=\"title\">Welcome to the life calendar!</h1>\n            <h2 className=\"subtitle\">How was your day?</h2>\n          </div>\n        </header>\n        <main className=\"main\">\n          <div className=\"wrapper main__wrapper\">\n            <Switch>\n              <Route exact path=\"/\" render={ () => (\n                <Calendar days={days} />\n              )}/>\n              <Route path=\"/editor\" render={ () => (\n                <Editor\n                updateMood={updateMood}\n                addMood={addMood}\n                mood={newMood}\n                clearMood={clearMood}\n                error={isError}\n                />\n              )}/>\n            </Switch>\n          </div>\n        </main>\n        <footer className=\"footer\">\n          <p className=\"footer__text\">Megan M Edwards 2019</p>\n        </footer>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const saveData = (name, data) => {\r\n  localStorage.setItem(name, JSON.stringify(data));\r\n}\r\n\r\nconst getSavedData = (name) => {\r\n  const newData = JSON.parse(localStorage.getItem(name));\r\n  return newData;\r\n}\r\n\r\nexport {saveData, getSavedData};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </ HashRouter>,\n  document.getElementById('root'));"],"sourceRoot":""}